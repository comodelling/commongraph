"""Add GraphHistoryEvent table

Revision ID: db568791d6d1
Revises: 17dad9d69830
Create Date: 2025-02-08 09:50:04.926509

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "db568791d6d1"
down_revision: Union[str, None] = "17dad9d69830"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("graphhistoryevent")
    op.drop_index("ix_user_username", table_name="user")
    op.drop_table("user")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("password", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "preferences",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "security_question", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column("security_answer", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("username", name="user_pkey"),
    )
    op.create_index("ix_user_username", "user", ["username"], unique=False)
    op.create_table(
        "graphhistoryevent",
        sa.Column("event_id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("username", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "operation",
            postgresql.ENUM("create", "update", "delete", name="operationtype"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("node_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("source_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("target_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "payload",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("event_id", name="graphhistoryevent_pkey"),
    )
    # ### end Alembic commands ###
