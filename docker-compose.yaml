services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: objnet-backend
    ports:
      - "8000:8000"
    environment:
      - GRAPH_DB_TYPE=${GRAPH_DB_TYPE}
      - RELATIONAL_DB_TYPE=${RELATIONAL_DB_TYPE}
      - DOCKER_ENV=true
      - POSTGRES_DB_URL=postgresql://postgres:postgres@postgres:5432/objectivenet_db
    volumes:
      - ./backend:/app/backend/
      - ./backend/.env:/app/backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    image: node:latest
    container_name: objnet-frontend
    ports:
      - "5173:5173"
    working_dir: /app
    command: sh -c "npm install && npm run dev -- --host"
    volumes:
      - ./frontend:/app
    depends_on:
      backend:
        condition: service_started

  postgres:
    image: postgres:14
    container_name: objnet-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: objectivenet_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/initdb:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
